plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.cinematch'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testCompileOnly 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	implementation 'org.jsoup:jsoup:1.17.1'
	testImplementation 'com.h2database:h2'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('stage') {
	dependsOn 'build', 'clean'
}
build.mustRunAfter clean

jar {
	manifest {
		attributes(
				'Main-Class': 'com.cinematch.cinematch.CinematchApplication'
		)
	}
	archiveBaseName = 'cinematch'
	archiveVersion = '0.0.1-SNAPSHOT'
}
